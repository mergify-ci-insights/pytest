name: test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: 0 */4 * * 1-5


env:
  PYTEST_ADDOPTS: "--color=yes"

# Cancel running jobs for the same workflow and branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set permissions at the job level.
permissions: {}

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Build and Check Package
      uses: hynek/build-and-inspect-python-package@c52c3a4710070b50470d903818a7b25115dcd076

  build:
    needs: [package]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        name: [
          "windows-py39-unittest-asynctest",
          "windows-py39-unittest-twisted24",
          "windows-py39-unittest-twisted25",
          "windows-py39-pluggy",
          "windows-py39-xdist",
          "windows-py310",
          "windows-py311",
          "windows-py312",
          "windows-py313",
          "windows-py314",

          "ubuntu-py39-unittest-asynctest",
          "ubuntu-py39-unittest-twisted24",
          "ubuntu-py39-unittest-twisted25",
          "ubuntu-py39-lsof-numpy-pexpect",
          "ubuntu-py39-pluggy",
          "ubuntu-py39-freeze",
          "ubuntu-py39-xdist",
          "ubuntu-py310-xdist",
          "ubuntu-py311",
          "ubuntu-py312",
          "ubuntu-py313-pexpect",
          "ubuntu-py314",
          "ubuntu-pypy3-xdist",

          "macos-py39",
          "macos-py310",
          "macos-py312",
          "macos-py313",
          "macos-py314",

#          "doctesting",
#          "plugins",
        ]

        include:
          # Use separate jobs for different unittest flavors (twisted, asynctest) to ensure proper coverage.
          - name: "windows-py39-unittest-asynctest"
            python: "3.9"
            os: windows-latest
            tox_env: "py39-asynctest"
            use_coverage: true

          - name: "windows-py39-unittest-twisted24"
            python: "3.9"
            os: windows-latest
            tox_env: "py39-twisted24"
            use_coverage: true

          - name: "windows-py39-unittest-twisted25"
            python: "3.9"
            os: windows-latest
            tox_env: "py39-twisted25"
            use_coverage: true

          - name: "windows-py39-pluggy"
            python: "3.9"
            os: windows-latest
            tox_env: "py39-pluggymain-pylib-xdist"

          - name: "windows-py39-xdist"
            python: "3.9"
            os: windows-latest
            tox_env: "py39-xdist"

          - name: "windows-py310"
            python: "3.10"
            os: windows-latest
            tox_env: "py310-xdist"

          - name: "windows-py311"
            python: "3.11"
            os: windows-latest
            tox_env: "py311"

          - name: "windows-py312"
            python: "3.12"
            os: windows-latest
            tox_env: "py312"

          - name: "windows-py313"
            python: "3.13"
            os: windows-latest
            tox_env: "py313"

          - name: "windows-py314"
            python: "3.14"
            os: windows-latest
            tox_env: "py314"

          # Use separate jobs for different unittest flavors (twisted, asynctest) to ensure proper coverage.
          - name: "ubuntu-py39-unittest-asynctest"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-asynctest"
            use_coverage: true

          - name: "ubuntu-py39-unittest-twisted24"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-twisted24"
            use_coverage: true

          - name: "ubuntu-py39-unittest-twisted25"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-twisted25"
            use_coverage: true

          - name: "ubuntu-py39-lsof-numpy-pexpect"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-lsof-numpy-pexpect"
            use_coverage: true

          - name: "ubuntu-py39-pluggy"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-pluggymain-pylib-xdist"

          - name: "ubuntu-py39-freeze"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-freeze"

          - name: "ubuntu-py39-xdist"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39-xdist"

          - name: "ubuntu-py310-xdist"
            python: "3.10"
            os: ubuntu-latest
            tox_env: "py310-xdist"

          - name: "ubuntu-py311"
            python: "3.11"
            os: ubuntu-latest
            tox_env: "py311"
            use_coverage: true

          - name: "ubuntu-py312"
            python: "3.12"
            os: ubuntu-latest
            tox_env: "py312"
            use_coverage: true

          - name: "ubuntu-py313-pexpect"
            python: "3.13"
            os: ubuntu-latest
            tox_env: "py313-pexpect"
            use_coverage: true

          - name: "ubuntu-py314"
            python: "3.14"
            os: ubuntu-latest
            tox_env: "py314"
            use_coverage: true

          - name: "ubuntu-pypy3-xdist"
            python: "pypy-3.9"
            os: ubuntu-latest
            tox_env: "pypy3-xdist"


          - name: "macos-py39"
            python: "3.9"
            os: macos-latest
            tox_env: "py39-xdist"
            use_coverage: true

          - name: "macos-py310"
            python: "3.10"
            os: macos-latest
            tox_env: "py310-xdist"

          - name: "macos-py312"
            python: "3.12"
            os: macos-latest
            tox_env: "py312-xdist"

          - name: "macos-py313"
            python: "3.13"
            os: macos-latest
            tox_env: "py313-xdist"

          - name: "macos-py314"
            python: "3.14"
            os: macos-latest
            tox_env: "py314-xdist"

#          - name: "plugins"
#            python: "3.12"
#            os: ubuntu-latest
#            tox_env: "plugins"
#
#
#          - name: "doctesting"
#            python: "3.9"
#            os: ubuntu-latest
#            tox_env: "doctesting"
#            use_coverage: true

    continue-on-error: >-
      ${{
        contains(
          fromJSON(
            '[
              "windows-py39-pluggy",
              "windows-py313",
              "ubuntu-py39-pluggy",
              "ubuntu-py39-freeze",
              "ubuntu-py313",
              "macos-py39",
              "macos-py313"
            ]'
          ),
          matrix.name
        )
        && true
        || false
      }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Download Package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        check-latest: true
        allow-prereleases: true

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox coverage

    - name: Test
      shell: bash
      env:
        MERGIFY_TOKEN: ${{ secrets.MERGIFY_TOKEN }}
        MERGIFY_TEST_JOB_NAME: build (${{ matrix.tox_env }})
      run: tox run -e ${{ matrix.tox_env }} --installpkg `find dist/*.tar.gz`
